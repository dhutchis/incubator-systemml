
k = as.scalar(read($1))
n = as.scalar(read($2))
c = as.scalar(read($3))
alpha = as.scalar(read($4))
t = as.scalar(read($5))

# random matrix of -1 and 1
# todo optimize to 0 and 1
#AR = rand(rows=clogn, cols=n, min=0, max=1, pdf="uniform", sparsity=1.0)
#A = -1 * (AR <= 0.5) + (AR > 0.5)
A = read($6)    # clogn x n
Ar = nrow(A)
Ac = ncol(A)
print("A is "+Ar+" by "+Ac)

##########################################################
## Naive:
X =  t(A)%*%A - diag(diag(t(A)%*%A))
X_rowmax = rowMaxs(X) # col vector of max val in each row
X_rowidx = as.scalar(rowIndexMax(t(X_rowmax))) # row index of max val
XR = X[X_rowidx,] # row vector
X_colidx = as.scalar(rowIndexMax(XR)) # col index of max val
# result: (X_rowidx, X_colidx)
##########################################################

i = as.matrix(X_rowidx)
j = as.matrix(X_colidx)
Z = cbind(i, j)

print("(i,j): " + X_rowidx + ", " + X_colidx)
write(Z, $7);
