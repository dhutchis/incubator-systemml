
k = 2
n = 2^3
n13 = as.integer(n^(1.0/3.0))
n23 = as.integer(n^(2.0/3.0))
nlog = as.integer(log(n,2)+1)

# random matrix of -1 and 1
# todo optimize to 0 and 1
#AR = rand(rows=nlog, cols=n, min=0, max=1, pdf="uniform", sparsity=1.0)
#A = -1 * (AR <= 0.5) + (AR > 0.5)
A = read($1)


##########################################################
## Naive:
X = abs( t(A)%*%A - diag(t(A)%*%A) )
X_rowmax = rowMaxs(X) # col vector of max val in each row
X_rowidx = as.scalar(rowIndexMax(t(X_rowmax))) # row index of max val
XR = X[X_rowidx,] # row vector
X_colidx = as.scalar(rowIndexMax(XR)) # col index of max val
# result: (X_rowidx, X_colidx)
##########################################################

i = as.matrix(X_rowidx)
j = as.matrix(X_colidx)
Z = cbind(i, j)

print("(i,j): " + X_rowidx + ", " + X_colidx)
write(Z, $2);
